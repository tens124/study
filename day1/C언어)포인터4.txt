#include<stbio.h>
main()
{
	int* array[3];		//3개의 요소를 갖는 정수형 포인터 배열 array를 선언. 해당 배열에는 정수형 포인터만 저장 가능
	int a = 12, b = 24, c = 36;
	array[0] = &a;
	array[1] = &b;
	array[2] = &c;
	&변수명은 포인터의 대용으로 쓰는 것도 충분히 가능하다. 따라서 포인터 배열에 해당 주소들을 넣을 수 있는 것	

	printf("%d", *array[1] + **array + 1);
	//*array[1]은 24를 의미
	//array는 배열의 첫 주소를 의미. 즉 포인트배열 array[0]의 주소를 의미
	//*array는 해당 주소의 값을 의미. array[0]에는 &a가 저장되어 있다. 즉 a의 주소값을 의미함. 포인터 변수에는 주소값이 저장되어 있음!
	//**array는 *array의 주소가 가리키는 곳의 값을 의미. 따라서 a의 값인 12	
}

이렇게 이해해보자. int* array[3]; 선언으로 인해 500이라는 주소에 3칸짜리 array 배열이 생겨남. 해당 배열은 포인터 배열로, 포인터(혹은 주소값)만을 저장 가능
int a = 12, b = 24, c = 36; 선언으로 인해 세 개의 변수가 각각 1000,2000,3000이라는 주소에 생겨남
array[0]에는 1000(&a)을 저장/array[1]에는 2000(&b)을 저장/array[2]에는 3000(&c)을 저장
즉 1000,2000,3000이 array 배열의 내용이며, 이들 각각은 주소값을 의미
array[0]을 출력한다면 500이 출력될 것. 해당 위치의 주소이기 때문
*array[0]을 출력한다면 1000이 출력될 것. 해당 위치의 값이기 때문
**array[0]을 출력한다면 12가 출력될 것. 1000이라는 주소의 내용이기 때문
출력 시 *을 붙이게 되면 해당 값을 주소로 보고, 그 주소에 존재하는 값을 출력하게 된다